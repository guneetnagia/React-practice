{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\GitProjects\\\\React\\\\React-practice\\\\InterviewPrep\\\\todo\\\\src\\\\SongSearcher\\\\components\\\\SongList.jsx\";\nimport React, { useEffect } from 'react';\n\nfunction SongList({\n  songs,\n  selectSong\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Songs List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), songs.sort((song1, song2) => song2.year - song1.year).map((song, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      selectSong: () => selectSong(song),\n      children: song.title\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 25\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SongList;\nexport default SongList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"sources":["E:/GitProjects/React/React-practice/InterviewPrep/todo/src/SongSearcher/components/SongList.jsx"],"names":["React","useEffect","SongList","songs","selectSong","sort","song1","song2","year","map","song","idx","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAlB,EAAuC;AACnC,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQD,KAAK,CAACE,IAAN,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkBA,KAAK,CAACC,IAAN,GAAaF,KAAK,CAACE,IAAhD,EACKC,GADL,CACS,CAACC,IAAD,EAAOC,GAAP,kBACD;AAAe,MAAA,UAAU,EAAE,MAAIP,UAAU,CAACM,IAAD,CAAzC;AAAA,gBAAkDA,IAAI,CAACE;AAAvD,OAAUD,GAAV;AAAA;AAAA;AAAA;AAAA,YAFR,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;KAZQT,Q;AAcT,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nfunction SongList({songs, selectSong}) {\r\n    return (\r\n        <div>\r\n            <h3>Songs List</h3>\r\n            {\r\n                songs.sort((song1, song2) => song2.year - song1.year)\r\n                    .map((song, idx) => (\r\n                        <div key={idx} selectSong={()=>selectSong(song)}>{song.title}</div>\r\n                    ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongList;"]},"metadata":{},"sourceType":"module"}