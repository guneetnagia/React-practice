{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\GitProjects\\\\React\\\\React-practice\\\\InterviewPrep\\\\todo\\\\src\\\\youtube\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport youtube from '../apis/youtube';\nimport VideoList from './VideoList';\nimport VideoDetails from './VideoDetails';\n\nfunction App() {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState('');\n  useEffect(() => {\n    onTermSubmit('guneet');\n  }, []);\n\n  const onTermSubmit = async searched => {\n    const response = await youtube.get('/search', {\n      params: {\n        q: searched\n      }\n    });\n    console.log(response.data.items);\n    setVideos(response.data.items);\n  };\n\n  const handleSelectedVideo = video => {\n    setSelectedVideo(video);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onFormSubmit: onTermSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n      onVideoSelect: handleSelectedVideo,\n      videos: videos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VideoDetails, {\n      video: selectedVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"8Bjjf/DuKbnLSyms6y011lVrNGU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/GitProjects/React/React-practice/InterviewPrep/todo/src/youtube/components/App.jsx"],"names":["React","useState","useEffect","SearchBar","youtube","VideoList","VideoDetails","App","videos","setVideos","selectedVideo","setSelectedVideo","onTermSubmit","searched","response","get","params","q","console","log","data","items","handleSelectedVideo","video"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,GAAT,GAAc;AAAA;;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,YAAY,CAAC,QAAD,CAAZ;AACH,GAFQ,EAEP,EAFO,CAAT;;AAIG,QAAMA,YAAY,GAAG,MAAOC,QAAP,IAAoB;AACrC,UAAMC,QAAQ,GAAG,MAAMV,OAAO,CAACW,GAAR,CAAY,SAAZ,EAAsB;AACzCC,MAAAA,MAAM,EAAC;AACHC,QAAAA,CAAC,EAACJ;AADC;AADkC,KAAtB,CAAvB;AAKAK,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,IAAT,CAAcC,KAA1B;AACAZ,IAAAA,SAAS,CAACK,QAAQ,CAACM,IAAT,CAAcC,KAAf,CAAT;AACH,GARD;;AAUA,QAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAClCZ,IAAAA,gBAAgB,CAACY,KAAD,CAAhB;AACJ,GAFD;;AAGC,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,YAAY,EAAEX;AAAzB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,aAAa,EAAIU,mBAA5B;AAAiD,MAAA,MAAM,EAAEd;AAAzD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEE;AAArB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA5BQH,G;;KAAAA,G;AA6BT,eAAeA,GAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport youtube from '../apis/youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetails from './VideoDetails';\r\n\r\nfunction App(){\r\nconst [videos, setVideos] = useState([]);\r\nconst [selectedVideo, setSelectedVideo] = useState('');\r\n\r\nuseEffect(()=>{\r\n    onTermSubmit('guneet')\r\n},[])\r\n\r\n   const onTermSubmit = async (searched) => {\r\n       const response = await youtube.get('/search',{\r\n           params:{\r\n               q:searched\r\n           }\r\n       });\r\n       console.log(response.data.items)\r\n       setVideos(response.data.items)\r\n   }\r\n\r\n   const handleSelectedVideo = (video) => {\r\n        setSelectedVideo(video);\r\n   }\r\n    return(\r\n        <div className=\"ui container\">\r\n            <SearchBar onFormSubmit={onTermSubmit} />\r\n            <VideoList onVideoSelect = {handleSelectedVideo} videos={videos}></VideoList>\r\n            <VideoDetails video={selectedVideo}/>\r\n        </div>\r\n    );\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}