{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\GitProjects\\\\React\\\\InterviewPrep\\\\todo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Header from './components/Todo/Header';\nimport data from './components/Todo/data.json';\nimport TodoList from './components/Todo/ToDoList';\nimport TodoForm from './components/Todo/TodoForm';\nexport function ToDo_App() {\n  _s();\n\n  const [todoList, setTodo] = useState(data);\n\n  function addTask(userInput) {\n    let copy = [...todoList];\n    copy = [...copy, {\n      id: todoList.length + 1,\n      task: userInput,\n      complete: false\n    }];\n    setTodo(copy);\n  }\n\n  function handleToggle(id) {\n    let mapped = todoList.map(task => {\n      return task.id === id ? { ...task,\n        complete: !task.complete\n      } : { ...task\n      };\n    });\n    console.log(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todoList: todoList,\n      handleToggle: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDo_App, \"v6GyOeq8ZaM7w6EsaU7DC7bd37Y=\");\n\n_c = ToDo_App;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo_App\");","map":{"version":3,"sources":["E:/GitProjects/React/InterviewPrep/todo/src/App.js"],"names":["React","useState","Header","data","TodoList","TodoForm","ToDo_App","todoList","setTodo","addTask","userInput","copy","id","length","task","complete","handleToggle","mapped","map","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBP,QAAQ,CAACE,IAAD,CAApC;;AAEA,WAASM,OAAT,CAAiBC,SAAjB,EAA4B;AACxB,QAAIC,IAAI,GAAG,CAAC,GAAGJ,QAAJ,CAAX;AACAI,IAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAU;AAAEC,MAAAA,EAAE,EAAEL,QAAQ,CAACM,MAAT,GAAkB,CAAxB;AAA2BC,MAAAA,IAAI,EAAEJ,SAAjC;AAA4CK,MAAAA,QAAQ,EAAE;AAAtD,KAAV,CAAP;AACAP,IAAAA,OAAO,CAACG,IAAD,CAAP;AACH;;AAED,WAASK,YAAT,CAAsBJ,EAAtB,EAA0B;AACtB,QAAIK,MAAM,GAAGV,QAAQ,CAACW,GAAT,CAAcJ,IAAD,IAAU;AAChC,aAAOA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAAiB,EAAC,GAAGE,IAAJ;AAAUC,QAAAA,QAAQ,EAAE,CAACD,IAAI,CAACC;AAA1B,OAAjB,GAAuD,EAAC,GAAGD;AAAJ,OAA9D;AACH,KAFY,CAAb;AAGAK,IAAAA,OAAO,CAACC,GAAR,CAAYR,EAAZ;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEL,QAApB;AAA8B,MAAA,YAAY,EAAES;AAA5C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEP;AAAnB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAvBeH,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react';\r\nimport Header from './components/Todo/Header';\r\nimport data from './components/Todo/data.json';\r\nimport TodoList from './components/Todo/ToDoList';\r\nimport TodoForm from './components/Todo/TodoForm';\r\n\r\nexport function ToDo_App() {\r\n    const [todoList, setTodo] = useState(data);\r\n\r\n    function addTask(userInput) {\r\n        let copy = [...todoList];\r\n        copy = [...copy, { id: todoList.length + 1, task: userInput, complete: false }];\r\n        setTodo(copy);\r\n    }\r\n\r\n    function handleToggle(id) {\r\n        let mapped = todoList.map((task) => {\r\n            return task.id === id ? {...task, complete: !task.complete} : {...task}\r\n        })\r\n        console.log(id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <TodoList todoList={todoList} handleToggle={handleToggle} />\r\n            <TodoForm addTask={addTask} />\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}